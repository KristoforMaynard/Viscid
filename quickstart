#!/usr/bin/env bash

##############################
# setup some initial defaults
update_existing_envs=1
reinstall_conda=0
build_viscid=1
inplace=1
rcfile=""

##################
# establish usage
print_usage() {
cat << EOF
Usage: ${0##*/} [-hNXRi] [-p PREFIX] [-e ENVS] [-r BASHRC]

Quickstart Viscid by installing miniconda and appropriate environments

  Optional Arguments:
    -h          help
    -N          do not update conda environments if they already exist
    -X          do not build/install viscid
    -R          reinstall anaconda
    -i          inplace installation
    -p PREFIX   anaconda prefix
    -e ENVS     viscid environments to install, the first will be the default
    -r BASHRC   bashrc file to edit

EOF
exit $1
}

##################
# parse arguments

OPTIND=1
while getopts "h?NXRip:e:r:" arg; do
  case $arg in
    h|\?)
      print_usage 0;;
    N) update_existing_envs=0;;
    X) build_viscid=0;;
    R) reinstall_conda=1;;
    i) inplace=1;;
    p) anaconda_prefix=${OPTARG};;
    e) envs=${OPTARG};;
    r) rcfile=${OPTARG};;
    *) print_usage 1;;
  esac
done
shift $((OPTIND-1))

#####################

function abspath() {
    # generate absolute path from relative path
    # $1     : relative filename
    # return : absolute path
    if [ -d "$1" ]; then
        # dir
        (cd "$1"; pwd)
    elif [ -f "$1" ]; then
        # file
        if [[ $1 == */* ]]; then
            echo "$(cd "${1%/*}"; pwd)/${1##*/}"
        else
            echo "$(pwd)/$1"
        fi
    fi
}

function get_anaconda_prefix() {
  # return : absolute path prefix of first conda in PATH
  _ap="$(abspath "$(dirname "$(which conda)")/..")"
  if [ "$(echo "${_ap}" | grep 'envs' )" != "" ]; then
    _ap="$(abspath "${_ap}/../..")"
  fi
  echo "${_ap}"
}

#####################

viscid_dir="$(abspath "$(dirname ${0})")"

if [ "$(uname)" == "Darwin" ]; then
  anaconda_prefix="${anaconda_prefix:-${HOME}/Library/anaconda}"
  conda_url="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"
  envs="${envs:-viscid35mayavi,viscid35,viscid27}"
elif [ "$(uname)" == "Linux" ]; then
  anaconda_prefix="${anaconda_prefix:-${HOME}/local/anaconda}"
  conda_url="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
  envs="${envs:-viscid27,viscid35mayavi,viscid35}"
else
  echo "MacOSX / Linux only"
  exit 1
fi

# if we want to wipe anaconda clean, then delete it now
if [ ${reinstall_conda} -ne 0 ]; then
  if [ "$(which conda)" != "" ]; then
    echo "= Removing anaconda environment at: $(get_anaconda_prefix)"
    rm -rf "$(get_anaconda_prefix)"
  fi
fi

# install miniconda if `conda` is not in PATH
if [ "$(which conda)" == "" ]; then
  echo "= Installing miniconda at: ${anaconda_prefix}"
  if [ "$(which wget)" != "" ]; then
    wget -O- "${conda_url}" > miniconda.sh 2> /dev/null
  else
    curl "${conda_url}" > miniconda.sh 2> /dev/null
  fi
  /usr/bin/env sh miniconda.sh -b -p "${anaconda_prefix}"
  rm miniconda.sh
  export PATH="${anaconda_prefix}/bin:${PATH}"
  hash -r
fi

# install the desired Viscid environments
envs="${envs//,/ }"
for e in ${envs}; do
  if [ "$(conda env list | grep "${e}")" == "" ]; then
    echo "= Installing environment: ${e}"
    conda env create -f "${viscid_dir}/resources/${e}.yml"
  elif [ ${update_existing_envs:-1} -ne 0 ]; then
    echo "= Updating environment: ${e}"
    conda update -n ${e} --all --yes
  fi
done

# activate the first conda env in the list
echo "= Activating ${envs/%\ */}"
. activate ${envs/%\ */}
env_prefix="$(conda env list | grep '*' | sed 's/.*\*[[:space:]]*//')"

# make viscid
if [ ${build_viscid} -ne 0 ]; then
  echo "= Making Viscid"
  if [ ${inplace} -ne 0 ]; then
    make -C ${viscid_dir} clean
    make -C ${viscid_dir} inplace
  else
    make -C ${viscid_dir} install
  fi
fi

# put viscidrc in ${HOME}
if [ ! -f "${HOME}/.viscidrc" ]; then
  echo "= Copying .viscidrc file"
  cp ${viscid_dir}/resources/viscidrc ${HOME}/.viscidrc
fi

# put conda in the path in rcfile
if [ -f "${rcfile}" ]; then
  echo "= Editing ${rcfile}"

  cat ${rcfile} > ${rcfile}.viscid-bak

  # add current conda env to the path
  echo "# Anaconda Python" >> ${rcfile}
  echo "export PATH=${env_prefix}/bin:"'${PATH}' >> ${rcfile}

  if [ ${inplace} -ne 0 ]; then
    echo "# Viscid" >> ${rcfile}
    echo "export PATH="'${PATH}'":${viscid_dir}/scripts" >> ${rcfile}
    echo "export PYTHONPATH="'${PYTHONPATH}'":${viscid_dir}" >> ${rcfile}
  fi
fi

##
## EOF
##
